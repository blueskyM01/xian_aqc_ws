#!/usr/bin/env python
PACKAGE = "xian_aqc_params" # 需跟功能包的名称一样
from dynamic_reconfigure.parameter_generator_catkin import *
import json
def ZPMC_Firstlandi_Param(file_path):
    with open(file_path, 'r') as f:
        load_dict = json.load(f)
    f.close()
    return load_dict
load_params = ZPMC_Firstlandi_Param('/root/code/xian_aqc_ws/xian_project_file/parameters/xian_aqc_dynamic_parameters.json')

xian_plc_heart_beat = load_params['xian_plc_heart_beat']
xian_acds_heart_beat = load_params['xian_acds_heart_beat']
xian_aqc_dynamic_param_node_heart_beat = load_params['xian_aqc_dynamic_param_node_heart_beat']
xian_server_simulation_tl_node_heart_beat = load_params['xian_server_simulation_tl_node_heart_beat']
xian_acds_send_to_retrable_box_mode0 = load_params['xian_acds_send_to_retrable_box_mode0']
xian_acds_send_to_retrable_box_mode1 = load_params['xian_acds_send_to_retrable_box_mode1']
xian_acds_send_to_retrable_box_mode2 = load_params['xian_acds_send_to_retrable_box_mode2']
xian_acds_send_to_retrable_box_mode3 = load_params['xian_acds_send_to_retrable_box_mode3']
xian_from_plc_to_retrable_box_mode0 = load_params['xian_from_plc_to_retrable_box_mode0']
xian_from_plc_to_retrable_box_mode1 = load_params['xian_from_plc_to_retrable_box_mode1']
xian_from_plc_to_retrable_box_mode2 = load_params['xian_from_plc_to_retrable_box_mode2']
xian_from_plc_to_retrable_box_mode3 = load_params['xian_from_plc_to_retrable_box_mode3']
xian_retrable_box_state0 = load_params['xian_retrable_box_state0']
xian_retrable_box_state1 = load_params['xian_retrable_box_state1']
xian_retrable_box_state2 = load_params['xian_retrable_box_state2']
xian_retrable_box_state3 = load_params['xian_retrable_box_state3']
xian_accs_ip = load_params['xian_accs_ip']
xian_camera_driver_heat_beat = load_params['xian_camera_driver_heat_beat']
xian_camera_sensor_fps = load_params["xian_camera_sensor_fps"]
xian_tl_container_point_x = load_params["xian_tl_container_point_x"]
xian_tl_container_point_y = load_params["xian_tl_container_point_y"]
xian_tr_container_point_x = load_params["xian_tr_container_point_x"]
xian_tr_container_point_y = load_params["xian_tr_container_point_y"]
xian_bl_container_point_x = load_params["xian_bl_container_point_x"]
xian_bl_container_point_y = load_params["xian_bl_container_point_y"]
xian_br_container_point_x = load_params["xian_br_container_point_x"]
xian_br_container_point_y = load_params["xian_br_container_point_y"]
xian_container_corner_cop_process_heart_beat = load_params["xian_container_corner_cop_process_heart_beat"]
xian_container_corner_cop_process_fps = load_params["xian_container_corner_cop_process_fps"]
xian_is_calibrate_flag = load_params["xian_is_calibrate_flag"]
xian_keypoints_recognition_heart_beat = load_params["xian_keypoints_recognition_heart_beat"]
xian_keypoints_recognition_fps = load_params["xian_keypoints_recognition_fps"]
xian_crop_bais_x_tl_1 = load_params["xian_crop_bais_x_tl_1"]
xian_crop_bais_y_tl_1 = load_params["xian_crop_bais_y_tl_1"]
xian_crop_bais_x_tr_1 = load_params["xian_crop_bais_x_tr_1"]
xian_crop_bais_y_tr_1 = load_params["xian_crop_bais_y_tr_1"]
xian_crop_bais_x_bl_1 = load_params["xian_crop_bais_x_bl_1"]
xian_crop_bais_y_bl_1 = load_params["xian_crop_bais_y_bl_1"]
xian_crop_bais_x_br_1 = load_params["xian_crop_bais_x_br_1"]
xian_crop_bais_y_br_1 = load_params["xian_crop_bais_y_br_1"]
xian_crop_bais_x_tl_2 = load_params["xian_crop_bais_x_tl_2"]
xian_crop_bais_y_tl_2 = load_params["xian_crop_bais_y_tl_2"]
xian_crop_bais_x_tr_2 = load_params["xian_crop_bais_x_tr_2"]
xian_crop_bais_y_tr_2 = load_params["xian_crop_bais_y_tr_2"]
xian_crop_bais_x_bl_2 = load_params["xian_crop_bais_x_bl_2"]
xian_crop_bais_y_bl_2 = load_params["xian_crop_bais_y_bl_2"]
xian_crop_bais_x_br_2 = load_params["xian_crop_bais_x_br_2"]
xian_crop_bais_y_br_2 = load_params["xian_crop_bais_y_br_2"]

gen = ParameterGenerator()
gen.add("xian_plc_heart_beat", int_t, 0, "xian plc heart beat", xian_plc_heart_beat, 0, 1000)
gen.add("xian_acds_heart_beat", int_t, 0, "xian acds heart beat", xian_acds_heart_beat, 0, 1000)
gen.add("xian_aqc_dynamic_param_node_heart_beat", int_t, 0, "xian aqc dynamic param node heart beat", xian_aqc_dynamic_param_node_heart_beat, 0, 1000)
gen.add("xian_server_simulation_tl_node_heart_beat", int_t, 0, "xian server simulation tl node heart_beat", xian_server_simulation_tl_node_heart_beat, 0, 1000)
gen.add("xian_acds_send_to_retrable_box_mode0", int_t, 0, "xian acds send to retrable box mode0", xian_acds_send_to_retrable_box_mode0, 0, 10)
gen.add("xian_acds_send_to_retrable_box_mode1", int_t, 0, "xian acds send to retrable box mode1", xian_acds_send_to_retrable_box_mode1, 0, 10)
gen.add("xian_acds_send_to_retrable_box_mode2", int_t, 0, "xian acds send to retrable box mode2", xian_acds_send_to_retrable_box_mode2, 0, 10)
gen.add("xian_acds_send_to_retrable_box_mode3", int_t, 0, "xian acds send to retrable box mode3", xian_acds_send_to_retrable_box_mode3, 0, 10)
gen.add("xian_from_plc_to_retrable_box_mode0", int_t, 0, "xian from plc to retrable box mode0", xian_from_plc_to_retrable_box_mode0, 0, 10)
gen.add("xian_from_plc_to_retrable_box_mode1", int_t, 0, "xian from plc to retrable box mode1", xian_from_plc_to_retrable_box_mode1, 0, 10)
gen.add("xian_from_plc_to_retrable_box_mode2", int_t, 0, "xian from plc to retrable box mode2", xian_from_plc_to_retrable_box_mode2, 0, 10)
gen.add("xian_from_plc_to_retrable_box_mode3", int_t, 0, "xian from plc to retrable box mode3", xian_from_plc_to_retrable_box_mode3, 0, 10)
gen.add("xian_retrable_box_state0", int_t, 0, "xian retrable box state0", xian_retrable_box_state0, 0, 10)
gen.add("xian_retrable_box_state1", int_t, 0, "xian retrable box state1", xian_retrable_box_state1, 0, 10)
gen.add("xian_retrable_box_state2", int_t, 0, "xian retrable box state2", xian_retrable_box_state2, 0, 10)
gen.add("xian_retrable_box_state3", int_t, 0, "xian retrable box state3", xian_retrable_box_state3, 0, 10)
gen.add("xian_accs_ip", str_t, 0, "PLC IP address", xian_accs_ip)
gen.add("xian_camera_driver_heat_beat", int_t, 0, "xian camera driver heat beat", xian_camera_driver_heat_beat, 0, 1000)
gen.add("xian_camera_sensor_fps", double_t, 0, "xian camera sensor fps", xian_camera_sensor_fps, 0, 1000)
gen.add("xian_tl_container_point_x", int_t, 0, "xian tl container point x", xian_tl_container_point_x, 0, 5000)
gen.add("xian_tl_container_point_y", int_t, 0, "xian tl container point y", xian_tl_container_point_y, 0, 5000)
gen.add("xian_tr_container_point_x", int_t, 0, "xian tr container point x", xian_tr_container_point_x, 0, 5000)
gen.add("xian_tr_container_point_y", int_t, 0, "xian tr container point y", xian_tr_container_point_y, 0, 5000)
gen.add("xian_bl_container_point_x", int_t, 0, "xian bl container point x", xian_bl_container_point_x, 0, 5000)
gen.add("xian_bl_container_point_y", int_t, 0, "xian bl container point y", xian_bl_container_point_y, 0, 5000)
gen.add("xian_br_container_point_x", int_t, 0, "xian br container point x", xian_br_container_point_x, 0, 5000)
gen.add("xian_br_container_point_y", int_t, 0, "xian br container point y", xian_br_container_point_y, 0, 5000)
gen.add("xian_container_corner_cop_process_heart_beat", int_t, 0, "xian spreader image process heart beat", xian_container_corner_cop_process_heart_beat, 0, 1000)
gen.add("xian_container_corner_cop_process_fps", double_t, 0, "xian spreader image process fps", xian_container_corner_cop_process_fps, 0, 1000)
gen.add("xian_is_calibrate_flag", int_t, 0, "xian is calibrate flag", xian_is_calibrate_flag, 0, 10)
gen.add("xian_keypoints_recognition_heart_beat", int_t, 0, "xian keypoints recognition heart beat", xian_keypoints_recognition_heart_beat, 0, 1000)
gen.add("xian_keypoints_recognition_fps", double_t, 0, "xian keypoints recognition fps", xian_keypoints_recognition_fps, 0, 1000)
gen.add("xian_crop_bais_x_tl_1", int_t, 0, "xian crop bais x tl 1", xian_crop_bais_x_tl_1, -5000, 5000)
gen.add("xian_crop_bais_y_tl_1", int_t, 0, "xian crop bais y tl 1", xian_crop_bais_y_tl_1, -5000, 5000)
gen.add("xian_crop_bais_x_tr_1", int_t, 0, "xian crop bais x tr 1", xian_crop_bais_x_tr_1, -5000, 5000)
gen.add("xian_crop_bais_y_tr_1", int_t, 0, "xian crop bais y tr 1", xian_crop_bais_y_tr_1, -5000, 5000)
gen.add("xian_crop_bais_x_bl_1", int_t, 0, "xian crop bais x bl 1", xian_crop_bais_x_bl_1, -5000, 5000)
gen.add("xian_crop_bais_y_bl_1", int_t, 0, "xian crop bais y bl 1", xian_crop_bais_y_bl_1, -5000, 5000)
gen.add("xian_crop_bais_x_br_1", int_t, 0, "xian crop bais x br 1", xian_crop_bais_x_br_1, -5000, 5000)
gen.add("xian_crop_bais_y_br_1", int_t, 0, "xian crop bais y br 1", xian_crop_bais_y_br_1, -5000, 5000)
gen.add("xian_crop_bais_x_tl_2", int_t, 0, "xian crop bais x tl 2", xian_crop_bais_x_tl_2, -5000, 5000)
gen.add("xian_crop_bais_y_tl_2", int_t, 0, "xian crop bais y tl 2", xian_crop_bais_y_tl_2, -5000, 5000)
gen.add("xian_crop_bais_x_tr_2", int_t, 0, "xian crop bais x tr 2", xian_crop_bais_x_tr_2, -5000, 5000)
gen.add("xian_crop_bais_y_tr_2", int_t, 0, "xian crop bais y tr 2", xian_crop_bais_y_tr_2, -5000, 5000)
gen.add("xian_crop_bais_x_bl_2", int_t, 0, "xian crop bais x bl 2", xian_crop_bais_x_bl_2, -5000, 5000)
gen.add("xian_crop_bais_y_bl_2", int_t, 0, "xian crop bais y bl 2", xian_crop_bais_y_bl_2, -5000, 5000)
gen.add("xian_crop_bais_x_br_2", int_t, 0, "xian crop bais x br 2", xian_crop_bais_x_br_2, -5000, 5000)
gen.add("xian_crop_bais_y_br_2", int_t, 0, "xian crop bais y br 2", xian_crop_bais_y_br_2, -5000, 5000)

exit(gen.generate(PACKAGE,"xian_aqc_dynamic_parameters_server","xian_aqc_dynamic_parameters"))
# PACKAGE:包的名称；xian_aqc_dynamic_parameters_server：节点的名称,就是server节点的那个节点；xian_aqc_dynamic_parameters：生成的配置文件，跟.cfg文件名称一样即可
