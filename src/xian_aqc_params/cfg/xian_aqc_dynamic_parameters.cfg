#!/usr/bin/env python
PACKAGE = "xian_aqc_params" # 需跟功能包的名称一样
from dynamic_reconfigure.parameter_generator_catkin import *
import json
def ZPMC_Firstlandi_Param(file_path):
    with open(file_path, 'r') as f:
        load_dict = json.load(f)
    f.close()
    return load_dict
load_params = ZPMC_Firstlandi_Param('/root/code/xian_aqc_ws/xian_project_file/parameters/xian_aqc_dynamic_parameters.json')

xian_tcp_server_heart_beat = load_params['xian_tcp_server_heart_beat']
xian_tcp_client_heart_beat = load_params['xian_tcp_client_heart_beat']
xian_aqc_dynamic_param_node_heart_beat = load_params['xian_aqc_dynamic_param_node_heart_beat']
xian_server_simulation_node_heart_beat = load_params['xian_server_simulation_node_heart_beat']
auto_manual_switch_flag = load_params['auto_manual_switch_flag']


gen = ParameterGenerator()
gen.add("xian_tcp_server_heart_beat", int_t, 0, "tcp server heart beat", xian_tcp_server_heart_beat, 0, 1000)
gen.add("xian_tcp_client_heart_beat", int_t, 0, "tcp client heart beat", xian_tcp_client_heart_beat, 0, 1000)
gen.add("xian_aqc_dynamic_param_node_heart_beat", int_t, 0, "xian aqc dynamic param node heart beat", xian_aqc_dynamic_param_node_heart_beat, 0, 1000)
gen.add("xian_server_simulation_node_heart_beat", int_t, 0, "xian server simulation node heart_beat", xian_server_simulation_node_heart_beat, 0, 1000)
gen.add("auto_manual_switch_flag", int_t, 0, "manuel_auto_mode flag", auto_manual_switch_flag, 0, 1)


exit(gen.generate(PACKAGE,"xian_aqc_dynamic_parameters_server","xian_aqc_dynamic_parameters"))
# PACKAGE:包的名称；xian_aqc_dynamic_parameters_server：节点的名称,就是server节点的那个节点；xian_aqc_dynamic_parameters：生成的配置文件，跟.cfg文件名称一样即可
